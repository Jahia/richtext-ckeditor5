# This workflow is triggered every time a change is pushed to any branches
# Github actions command reference: https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions
name: On Code Change (PR)

# The workflow could also be triggered on PRs
on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  update-signature:
    name: Update module signature
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: jahia/jahia-modules-action/update-signature@v2
        with:
          nexus_username: ${{ secrets.NEXUS_USERNAME }}
          nexus_password: ${{ secrets.NEXUS_PASSWORD }}

  static-analysis:
    name: Static Analysis (linting, vulns)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Jahia/jahia-modules-action/static-analysis@v2
        with:
          auditci_level: critical

  build:
    name: Build Module
    needs: update-signature
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/jahia/jahia-docker-mvn-cache:11-jdk-noble-mvn-loaded
      credentials:
        username: ${{ secrets.GH_PACKAGES_USERNAME }}
        password: ${{ secrets.GH_PACKAGES_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Create .env file
        shell: bash
        env:
          CKEDITOR_PRODUCTIVITY_LICENSE: ${{ secrets.CKEDITOR_PRODUCTIVITY_LICENSE }}
        run: |
          echo "CKEDITOR_PRODUCTIVITY_LICENSE=${CKEDITOR_PRODUCTIVITY_LICENSE}" > .env
      - uses: jahia/jahia-modules-action/build@v2
        with:
          nexus_username: ${{ secrets.NEXUS_USERNAME }}
          nexus_password: ${{ secrets.NEXUS_PASSWORD }}

  sonar-analysis:
    name: Sonar Analysis
    needs: build
    runs-on: ubuntu-latest
    env:
      NEXUS_INTERNAL_URL: ${{ secrets.NEXUS_INTERNAL_URL }}
    steps:
      - uses: actions/checkout@v4
      - uses: jahia/jahia-modules-action/sonar-analysis@v2
        with:
          primary_release_branch: main
          github_pr_id: ${{github.event.number}}
          sonar_url: ${{ secrets.SONAR_URL }}
          sonar_token: ${{ secrets.SONAR_TOKEN }}
          nexus_username: ${{ secrets.NEXUS_USERNAME }}
          nexus_password: ${{ secrets.NEXUS_PASSWORD }}

  integration-tests-standalone:
    name: Integration Tests (Standalone)
    needs: build
    runs-on: self-hosted
    timeout-minutes: 45
    steps:
      - uses: jahia/jahia-modules-action/helper@v2
      - uses: KengoTODA/actions-setup-docker-compose@main
        with:
          version: '1.29.2'
      - uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'
      - uses: actions/checkout@v4
      - uses: jahia/jahia-modules-action/integration-tests@v2
        with:
          module_id: richtext-ckeditor5
          testrail_project: CKEditor 5 Module
          tests_manifest: provisioning-manifest-build.yml
          jahia_image: ghcr.io/jahia/jahia-ee-dev:8-SNAPSHOT
          should_skip_testrail: true
          github_artifact_name: richtext-ckeditor5-standalone-artifacts-${{ github.run_number }}
          jahia_license: ${{ secrets.JAHIA_LICENSE_8X_FULL }}
          docker_registries: |
            [
              {
                "registry": "ghcr.io",
                "username": "${{ secrets.GH_PACKAGES_USERNAME }}",
                "password": "${{ secrets.GH_PACKAGES_TOKEN }}"
              },
              {
                "username": "${{ secrets.DOCKERHUB_USERNAME }}",
                "password": "${{ secrets.DOCKERHUB_PASSWORD }}"
              }
            ]
          nexus_username: ${{ secrets.NEXUS_USERNAME }}
          nexus_password: ${{ secrets.NEXUS_PASSWORD }}
          tests_report_name: Test report (Standalone)
          testrail_username: ${{ secrets.TESTRAIL_USERNAME }}
          testrail_password: ${{ secrets.TESTRAIL_PASSWORD }}
          incident_pagerduty_api_key: ${{ secrets.INCIDENT_PAGERDUTY_API_KEY }}
          incident_pagerduty_reporter_email: ${{ secrets.INCIDENT_PAGERDUTY_REPORTER_EMAIL }}
          incident_pagerduty_reporter_id: ${{ secrets.INCIDENT_PAGERDUTY_REPORTER_ID }}
          incident_google_spreadsheet_id: ${{ secrets.INCIDENT_GOOGLE_SPREADSHEET_ID }}
          incident_google_client_email: ${{ secrets.INCIDENT_GOOGLE_CLIENT_EMAIL }}
          incident_google_api_key_base64: ${{ secrets.INCIDENT_GOOGLE_PRIVATE_KEY_BASE64 }}
          zencrepes_secret: ${{ secrets.ZENCREPES_WEBHOOK_SECRET }}
      - name: Test Report
        uses: phoenix-actions/test-reporting@v12
        if: success() || failure()
        with:
          name: Tests Report (Standalone)
          path: tests/artifacts/results/xml_reports/**/*.xml
          reporter: java-junit
          fail-on-error: 'false'
          output-to: 'checks'
      - name: Keep session opened if /tmp/debug file is present
        shell: bash
        if: always()
        run: |
          echo "::group::Keep session opened if /tmp/debug file is present"
          WAIT_DURATION=0
          while [[ -e /tmp/debug ]]; do
            echo "Debug file present - $(( ++ WAIT_DURATION ))s - waiting for file removal..."
            if [ $WAIT_DURATION -gt '7200' ]; then
              echo "Reached timeout of: 7200"
              echo "Exiting the loop"
              break
            fi
            sleep 1;
          done
          echo "::endgroup::"
